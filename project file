#include<stdio.h>
#include<string.h>
#include<ctype.h>
#include<math.h>

typedef struct
{
    char email[50];
    char pass[50];
} data;

data table[1000];
int it,ix;

void maximum()
{
    long long int n,i,m;
    printf("Enter the number of required elements: ");
    scanf("%lld",&n);
    long long int ara[n];
    printf("Enter the numbers:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%lld",&ara[i]);
    }
    getchar();
    m = ara[0];
    for(i = 0; i < n; i++)
    {
        if(m < ara[i])
        {
            m = ara[i];
        }
    }
    printf("\nThe maximum element of the list is %lld\n\n",m);
}

void minimum()
{
    long long int n,i,m;
    printf("Enter the number of required elements: ");
    scanf("%lld",&n);
    long long int ara[n];
    printf("Enter the numbers:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%lld",&ara[i]);
    }
    getchar();
    m = ara[0];
    for(i = 0; i < n; i++)
    {
        if(m > ara[i])
        {
            m = ara[i];
        }
    }
    printf("\nThe minimum element of the list is %lld\n\n",m);
}

void average()
{
    long long int n,i,s = 0;
    printf("Enter the number of required elements: ");
    scanf("%lld",&n);
    long long int ara[n];
    printf("Enter the numbers:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%lld",&ara[i]);
    }
    getchar();
    for(i = 0; i < n; i++)
    {
        s += ara[i];
    }
    printf("\nThe average of the list is %lf\n\n",(s / (double)n));
}

void mean()
{
    long long int n,i,s = 0;
    printf("Enter the number of required elements: ");
    scanf("%lld",&n);
    long long int ara[n];
    printf("Enter the numbers:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%lld",&ara[i]);
    }
    getchar();
    for(i = 0; i < n; i++)
    {
        s += ara[i];
    }
    printf("\nThe mean of the list is %lf\n\n",(s / (double)n));
}

void add()
{
    long long int n,i,s = 0;
    printf("Enter the number of required elements: ");
    scanf("%lld",&n);
    long long int ara[n];
    printf("Enter the numbers:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%lld",&ara[i]);
        s += ara[i];
    }
    getchar();
    printf("\nThe sum of the elements of the list is %lld\n\n",s);
}

void sub()
{
    long long int a,b;
    printf("Enter first number: ");
    scanf("%lld",&a);
    printf("Enter second number: ");
    scanf("%lld",&b);
    getchar();
    printf("\n%lld subtracted by %lld is %lld\n\n",a,b,a-b);
}

void mul()
{
    long long int n,i,s = 1;
    printf("Enter the number of required elements: ");
    scanf("%lld",&n);
    long long int ara[n];
    printf("Enter the numbers:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%lld",&ara[i]);
        s *= ara[i];
    }
    getchar();
    printf("\nThe multiplication of the elements of the list is %lld\n\n",s);
}

void div()
{
    double a,b;
    printf("Enter first number: ");
    scanf("%lf",&a);
    printf("Enter second number: ");
    scanf("%lf",&b);
    getchar();
    printf("\n%0.0lf divided by %0.0lf is %lf\n\n",a,b,a/b);
}

void fact()
{
    long long int n,i,s = 1;
    printf("Enter number: ");
    scanf("%lld",&n);
    getchar();
    for(i = 1; i <= n; i++)
    {
        s *= i;
    }
    printf("\nFactorial of %lld is %lld.\n\n",n,s);
}

void fib()
{
    long long int l = 0,r = 1,s = 0,n,i;
    printf("Enter the position of the fibonacci number: ");
    scanf("%lld",&n);
    getchar();
    if(n == 0)
    {
        s = 0;
    }
    else if(n == 1)
    {
        s = 1;
    }
    else
    {
        for(i = 2; i <= n; i++)
        {
            s = l + r;
            l = r;
            r = s;
        }
    }
    printf("\nThe %lldth fibonacci number is %lld\n\n",n,s);
}

void triangle()
{
    double h,b;
    printf("Enter the height of the triangle: ");
    scanf("%lf",&h);
    printf("Enter the base of the triangle: ");
    scanf("%lf",&b);
    getchar();
    printf("\nThe area of the triangle is %lf\n\n",(h * b) / 2.0);
}

void rectangle()
{
    long long int a,b;
    printf("Enter the length of the rectangle: ");
    scanf("%lld",&a);
    printf("Enter the width of the rectangle: ");
    scanf("%lld",&b);
    getchar();
    printf("\nThe area of the rectangle is %lld\n\n",(a * b));
}

void circle()
{
    double r,pi = 3.14159265;
    printf("Enter the radius of the circle: ");
    scanf("%lf",&r);
    getchar();
    printf("\nThe area of the circle is %lf\n\n",pi*r*r);
}

void area()
{
    char ch;
    do
    {
        printf("***AREA CALCULATOR***\n");
        printf("a. Triangle\n");
        printf("b. Rectangle\n");
        printf("c. Circle\n");
        printf("d. Press 'B' previous interface\n\n");
        printf("Enter Key: ");
        scanf("%c",&ch);
        getchar();
        printf("\n");
        switch(ch)
        {
        case 'a':
            triangle();
            break;
        case 'b':
            rectangle();
            break;
        case 'c':
            circle();
            break;
        case 'B':
            break;
        default:
            printf("\nEnter Correct Key Again!\n\n");
        }
    }
    while(ch != 'B');
}

void BtoD()
{
    long long int b,d = 0,c,i,j;
    char str[100];
    printf("Enter the binary number: ");
    scanf("%s",str);
    getchar();
    c = strlen(str);
    for(i = 0; i < c; i++)
    {
        d += (str[i] - '0') * ((long long int)(pow(2,(c-i-1)) + 0.5));
    }
    printf("\nThe decimal representation of %s is %lld\n\n",str,d);
}

void DtoB()
{
    long long int b,d,c,i,j;
    long long int ara[100];
    printf("Enter the decimal number: ");
    scanf("%lld",&d);
    getchar();
    c = d;
    i = 0;
    do
    {
        ara[i] = c % 2;
        c = c / 2;
        i++;
    }
    while(c != 0);
    printf("\nThe binary representation of %lld is ",d);
    for(j = i-1; j >= 0; j--)
    {
        printf("%lld",ara[j]);
    }
    printf("\n\n");
}

void BtoH()
{
    long long int b,d = 0,c,i,j,k;
    char str[100],stt[100];
    char ch;
    printf("Enter the binary number: ");
    scanf("%s",str);
    getchar();
    b = strlen(str);
    c = b % 4;
    if(c == 0)
    {
        c = 4;
    }
    printf("\nThe hexadecimal representation of %s is ",str);
    for(i = 0,k = 0; i < b;)
    {
        for(j = i; j < (i+c); j++)
        {
            k += (str[j] - '0') * ((long long int)(pow(2,(c-(j-i)-1)) + 0.5));
        }
        if(k < 10)
        {
            printf("%lld",k);
        }
        else
        {
            ch = (k - 10) + 'A';
            printf("%c",ch);
        }
        i += c;
        c = 4;
        k = 0;
    }
    printf("\n\n");
}


void HtoB()
{
    long long int b,d,c,i,j,k;
    long long int ara[100];
    char str[100];
    printf("Enter the hexadecimal number: ");
    scanf("%s",&str);
    getchar();
    c = strlen(str);
    printf("\nThe binary representation of %s is ",str);
    if(isdigit(str[0]))
    {
        d = str[0] - '0';
    }
    else
    {
        str[0] = toupper(str[0]);
        d = 10 + (str[0] - 'A');
    }
    j = 0;
    do
    {
        ara[j] = d % 2;
        d = d / 2;
        j++;
    }
    while(d != 0);
    for(i = j-1; i >= 0; i--)
    {
        printf("%lld",ara[i]);
    }
    for(i = 1; i < c; i++)
    {
        long long int arr[4] = {};
        if(isdigit(str[i]))
        {
            d = str[i] - '0';
        }
        else
        {
            str[i] = toupper(str[i]);
            d = 10 + (str[i] - 'A');
        }
        j = 0;
        while(d != 0)
        {
            arr[j] = d % 2;
            d = d / 2;
            j++;
        }
        for(k = 3; k >= 0; k--)
        {
            printf("%lld",arr[k]);
        }
    }
    printf("\n\n");
}

void DtoH()
{
    long long int b,d,c,i,j;
    long long int ara[100];
    printf("Enter the decimal number: ");
    scanf("%lld",&d);
    getchar();
    c = d;
    i = 0;
    do
    {
        ara[i] = c % 16;
        c = c / 16;
        i++;
    }
    while(c != 0);
    printf("\nThe hexadecimal representation of %lld is ",d);
    for(j = i-1; j >= 0; j--)
    {
        if(ara[j] < 10)
        {
            printf("%lld",ara[j]);
        }
        else
        {
            printf("%c",(ara[j] - 10) + 'A');
        }
    }
    printf("\n\n");
}

void HtoD()
{
    long long int b,d = 0,c,i,j;
    char str[100];
    printf("Enter the hexadecimal number: ");
    scanf("%s",str);
    getchar();
    c = strlen(str);
    for(i = 0; i < c; i++)
    {
        if(isdigit(str[i]))
        {
            d += (str[i] - '0') * ((long long int)(pow(16,(c-i-1)) + 0.5));
        }
        else
        {
            str[i] = toupper(str[i]);
            d += (10 + (str[i] - 'A')) * ((long long int)(pow(16,(c-i-1)) + 0.5));
        }
    }
    printf("\nThe decimal representation of %s is %lld\n\n",str,d);
}

void OtoH()
{
    long long int o,d = 0,c,i,j;
    char str[100];
    printf("Enter the octal number: ");
    scanf("%s",&str);
    getchar();
    c = strlen(str);
    for(i = 0; i < c; i++)
    {
        d += (str[i] - '0') * ((long long int)(pow(8,(c-i-1)) + 0.5));
    }
    long long int b;
    long long int ara[100];
    c = d;
    i = 0;
    do
    {
        ara[i] = c % 16;
        c = c / 16;
        i++;
    }
    while(c != 0);
    printf("\nThe hexadecimal representation of %s is ",str);
    for(j = i-1; j >= 0; j--)
    {
        if(ara[j] < 10)
        {
            printf("%lld",ara[j]);
        }
        else
        {
            printf("%c",(ara[j] - 10) + 'A');
        }
    }
    printf("\n\n");
}

void HtoO()
{
    long long int b,d = 0,c,i,j;
    char str[100];
    printf("Enter the hexadecimal number: ");
    scanf("%s",str);
    getchar();
    c = strlen(str);
    for(i = 0; i < c; i++)
    {
        if(isdigit(str[i]))
        {
            d += (str[i] - '0') * ((long long int)(pow(16,(c-i-1)) + 0.5));
        }
        else
        {
            str[i] = toupper(str[i]);
            d += (10 + (str[i] - 'A')) * ((long long int)(pow(16,(c-i-1)) + 0.5));
        }
    }
    long long int ara[100];
    b = d;
    i = 0;
    do
    {
        ara[i] = b % 8;
        b = b / 8;
        i++;
    }
    while(b != 0);
    printf("\nThe octal representation of %s is ",str);
    for(j = i-1; j >= 0; j--)
    {
        printf("%lld",ara[j]);
    }
    printf("\n\n");
}

void numconversion()
{
    char ch;
    do
    {
        printf("***NUMBER CONVERSION***\n");
        printf("a. Binary to Decimal\n");
        printf("b. Decimal to Binary\n");
        printf("c. Binary to Hexadecimal\n");
        printf("d. Hexadecimal to Binary\n");
        printf("e. Decimal to Hexadecimal\n");
        printf("f. Hexadecimal to Decimal\n");
        printf("g. Octal to Hexadecimal\n");
        printf("h. Hexadecimal to Octal\n");
        printf("i. Press 'B' for previous interface\n\n");
        printf("Enter Key: ");
        scanf("%c",&ch);
        getchar();
        printf("\n");
        switch(ch)
        {
        case 'a':
            BtoD();
            break;
        case 'b':
            DtoB();
            break;
        case 'c':
            BtoH();
            break;
        case 'd':
            HtoB();
            break;
        case 'e':
            DtoH();
            break;
        case 'f':
            HtoD();
            break;
        case 'g':
            OtoH();
            break;
        case 'h':
            HtoO();
            break;
        case 'B':
            break;
        default:
            printf("\nEnter Correct Key Again!\n\n");
        }
    }
    while(ch != 'B');
}

void multable()
{
    long long int n,i;
    printf("Enter the number of the desired multiplication table: ");
    scanf("%lld",&n);
    getchar();
    printf("\n");
    for(i = 1; i <= 10; i++)
    {
        printf("%lld X %lld = %lld\n",n,i,(n*i));
    }
    printf("\n");
}

void sorting()
{
    long long int n,i,j,t;
    printf("Enter the number of required elements: ");
    scanf("%lld",&n);
    long long int ara[n];
    printf("Enter the numbers:\n");
    for(i = 0; i < n; i++)
    {
        scanf("%lld",&ara[i]);
    }
    getchar();
    for(i = n-1; i > 0; i--)
    {
        for(j = 0; j < i; j++)
        {
            if(ara[j] > ara[j+1])
            {
                t = ara[j];
                ara[j] = ara[j+1];
                ara[j+1] = t;
            }
        }
    }
    printf("\nThe sorted list of numbers:\n");
    for(i = 0; i < n; i++)
    {
        printf("%lld",ara[i]);
        if(i < n-1)
        {
            printf(" ");
        }
        else
        {
            printf("\n\n");
        }
    }
}

void calculator()
{
    char ch;
    long long int f = 0;
    do
    {
        printf("***CALCULATOR***\n");
        printf("a. Max\n");
        printf("b. Min\n");
        printf("c. Avg\n");
        printf("d. Mean\n");
        printf("e. Addition\n");
        printf("f. Subtraction\n");
        printf("g. Multiplication\n");
        printf("h. Division\n");
        printf("i. Factorial\n");
        printf("j. Fibonacci\n");
        printf("k. Area Calculator\n");
        printf("l. Number Conversion\n");
        printf("m. Multiplication Table: Multiplication table for any integer\n");
        printf("n. Sort a list of elements\n");
        printf("o. Press 'B' previous interface\n\n");
        printf("Enter Key: ");
        scanf("%c",&ch);
        getchar();
        printf("\n");
        switch(ch)
        {
        case 'a':
            maximum();
            break;
        case 'b':
            minimum();
            break;
        case 'c':
            average();
            break;
        case 'd':
            mean();
            break;
        case 'e':
            add();
            break;
        case 'f':
            sub();
            break;
        case 'g':
            mul();
            break;
        case 'h':
            div();
            break;
        case 'i':
            fact();
            break;
        case 'j':
            fib();
            break;
        case 'k':
            area();
            break;
        case 'l':
            numconversion();
            break;
        case 'm':
            multable();
            break;
        case 'n':
            sorting();
            break;
        case 'B':
            break;
        default:
            printf("\nEnter Correct Key Again!\n\n");
        }
    }
    while(ch != 'B');
}

void display(int board[3][3])
{
    int j,k;
    printf("\n");
    printf("   1 2 3\n");
    printf("  -------\n");
    for(j = 0; j < 3; j++)
    {
        printf("%d ",j+1);
        printf("|");
        for(k = 0; k < 3; k++)
        {
            if(board[j][k] == 1)
            {
                printf("X");
            }
            else if(board[j][k] == 2)
            {
                printf("O");
            }
            else
            {
                printf(" ");
            }
            printf("|");
        }
        printf("\n");
        printf("  -------\n");
    }

}

void tictactoe()
{
    printf("***TIC-TAC-TOE***\n");
    int board[3][3] = {};
    int i,j,k,f = 0,x,y,d,g = 0;
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            board[i][j] = 10 + ((i * 3)+ j);
        }
    }
    for(i = 0; i < 9; i++)
    {
        display(board);
        printf("\n");
        f = 0;
        if(i % 2 == 0)
        {
            do
            {
                g = 0;
                printf("First player's move(X):\n");
                printf("Choose position(row column): ");
                scanf("%d %d",&x,&y);
                if((board[x-1][y-1] == 1) || (board[x-1][y-1] == 2))
                {
                    printf("This Position is already filled!!!\n");
                    g = 1;
                }
            }
            while(g != 0);
            board[x-1][y-1] = 1;
        }
        else
        {
            do
            {
                g = 0;
                printf("Second player's move(O):\n");
                printf("Choose position(row column): ");
                scanf("%d %d",&x,&y);
                if((board[x-1][y-1] == 1) || (board[x-1][y-1] == 2))
                {
                    printf("This Position is already filled!!!\n");
                    g = 1;
                }
            }
            while(g != 0);
            board[x-1][y-1] = 2;
        }
        for(j = 0; j < 3; j++)
        {
            f = 0;
            for(k = 0; k < 2; k++)
            {
                if(board[j][k] != board[j][k+1])
                {
                    f = 1;
                }
            }
            if(f == 0)
            {
                d = board[j][k];
                break;
            }
        }
        if(f == 1)
        {
            for(j = 0; j < 3; j++)
            {
                f = 0;
                for(k = 0; k < 2; k++)
                {
                    if(board[k][j] != board[k+1][j])
                    {
                        f = 1;
                    }
                }
                if(f == 0)
                {
                    d = board[k][j];
                    break;
                }
            }
        }
        if(f == 1)
        {
            if((board[0][0] == board[1][1]) && (board[2][2] == board[1][1]))
            {
                d = board[0][0];
                f = 0;
            }
        }
        if(f == 1)
        {
            if((board[0][2] == board[1][1]) && (board[2][0] == board[1][1]))
            {
                d = board[0][2];
                f = 0;
            }
        }
        if(f == 0)
        {
            if(d % 2 == 0)
            {
                display(board);
                printf("\nSecond Player won!!\n\n");
                break;
            }
            else
            {
                display(board);
                printf("\nFirst Player won!!\n\n");
                break;
            }
        }
    }
    getchar();
    if(f == 1)
    {
        display(board);
        printf("\nIt's a draw!!\n\n");
    }
}

void gamezone()
{
    char ch;
    do
    {
        printf("***GAMEZONE***\n");
        printf("a. Tic Tac Toe(3 X 3) Board\n");
        printf("b. Press 'B' for previous interface.\n\n");
        printf("Enter Key: ");
        scanf("%c",&ch);
        printf("\n");
        getchar();
        switch(ch)
        {
        case 'a':
            tictactoe();
            break;
        case 'B':
            break;
        default:
            printf("\nEnter Correct Key Again!\n\n");
        }
    }
    while(ch != 'B');
}

void edubook()
{
    char ch;
    do
    {
        printf("\n***Welcome to EduBook***\n\n");
        printf("1. Press 'c' for Calculator\n");
        printf("2. Press 'g' for GamesZone\n");
        printf("3. Press 'q' to logout and go to the login interface\n\n");
        printf("Enter Key: ");
        scanf("%c",&ch);
        getchar();
        printf("\n");
        switch(ch)
        {
        case 'c':
            calculator();
            break;
        case 'g':
            gamezone();
            break;
        case 'q':
            break;
        default:
            printf("\nEnter Correct Key Again!\n\n");
        }
    }
    while(ch != 'q');

}

void signup()
{
    int i,j,k,f = 0,g = 0;
    char temp[50];
    char temc[50];
    printf("***SIGNUP***\n");
    do
    {

        f = 0;
        printf("Enter your email address: ");
        scanf("%s",temp);
        getchar();
        for(j = 0; j < it; j++)
        {
            if(strcmp(temp,table[j].email) == 0)
            {
                f = 1;
                break;
            }
        }
        if(f == 0)
        {
            strcpy(table[it].email,temp);
        }
        else
        {
            printf("\nThere is an account using this email.\n\n");
        }
    }
    while(f != 0);


    do
    {
        g = 0;
        int x1 = 0,x2 = 0,x3 = 0,x4 = 0,x5 = 1;
        printf("Type your password: ");
        scanf("%s",temp);
        getchar();
        if(strlen(temp) < 6)
        {
            printf("Password length must be >=6.\n");
            x5 = 0;
        }
        for(j = 0; j < strlen(temp); j++)
        {
            if(islower(temp[j]))
            {
                x1 = 1;
            }
            else if(isupper(temp[j]))
            {
                x2 = 1;
            }
            else if(isdigit(temp[j]))
            {
                x3 = 1;
            }
            else if((temp[j] == '.') || (temp[j] == '!') || (temp[j] == '@') || (temp[j] == '#') || (temp[j] == '$') || (temp[j] == '*'))
            {
                x4 = 1;
            }
        }
        if(x1 == 0)
        {
            printf("Password must contain at least one lowercase character.\n");
        }
        if(x2 == 0)
        {
            printf("Password must contain at least one uppercase character.\n");
        }
        if(x3 == 0)
        {
            printf("Password must contain at least one digit character.\n");
        }
        if(x4 == 0)
        {
            printf("Password must contain at least one special character.\n");
        }
        if((x1 == 0) || (x2 == 0) || (x3 == 0) || (x4 == 0) || (x5 == 0))
        {
            g = 1;
            continue;
        }
        printf("Re-type the password: ");
        scanf("%s",temc);
        getchar();
        if(strcmp(temp,temc) == 0)
        {
            strcpy(table[it].pass,temp);
            it++;
        }
        else
        {
            printf("\nRe-typed password doesn't match.\n\n");
            g = 1;
        }
    }
    while(g != 0);
    printf("\nProfile created!\n\n");
}

void login()
{
    char temp[50];
    int i,j,k,f = 0,g = 0;
    printf("***LOGIN***\n");
    do
    {
        g = 0;
        f = 0;

        printf("Enter your email address: ");
        scanf("%s",temp);
        getchar();
        for(j = 0; j < it; j++)
        {
            if(strcmp(temp,table[j].email) == 0)
            {
                k = j;
                f = 1;
                break;
            }
        }
        if(f == 0)
        {
            printf("\nThere is no such email!\n\n");
            g = 1;
            continue;
        }
        printf("Enter password: ");
        scanf("%s",temp);
        getchar();
        if(strcmp(temp,table[k].pass) == 0)
        {
            edubook();
        }
        else
        {
            printf("\nEnter Correct Password!\n\n");
            g = 1;
        }
    }
    while(g != 0);
}



int main()
{
    int i,j;
    FILE *fptr;
    fptr = fopen("input.txt","r");
    if(fptr != NULL)
    {
        while(!feof(fptr))
        {
            fscanf(fptr,"%s %s",table[it].email,table[it].pass);
            ix++;
            it++;
        }
        fclose(fptr);
    }
    char ch;
    do
    {
        printf("***Welcome to Photobook***\n\n");
        printf("1. Press 'a' to Signup\n");
        printf("2. Press 'b' to login\n");
        printf("3. Press 'Q' to Exit the program\n\n");
        printf("Enter Key: ");
        scanf("%c",&ch);
        printf("\n");
        switch(ch)
        {
        case 'a':
            signup();
            break;
        case 'b':
            login();
            break;
        case 'Q':
            break;
        }
    }
    while(ch != 'Q');
    fptr = fopen("input.txt","a");
    for(i = ix;i < it;i++)
    {
        fprintf(fptr,"%s %s\n",table[i].email,table[i].pass);
    }
    fclose(fptr);
    return 0;
}
